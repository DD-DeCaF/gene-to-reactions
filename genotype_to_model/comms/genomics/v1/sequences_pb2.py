# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: genomics/v1/sequences.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from schema import annotations_pb2 as schema_dot_annotations__pb2
from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='genomics/v1/sequences.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\x1bgenomics/v1/sequences.proto\x1a\x18schema/annotations.proto\x1a\x1cgoogle/api/annotations.proto\"\x9a\x01\n\x0c\x44NAComponent\x12\n\n\x02id\x18\x01 \x01(\t\x12\x12\n\nproject_id\x18\x02 \x01(\t\x12\x1b\n\x08topology\x18\x03 \x01(\x0e\x32\t.Topology\x12\x1e\n\x08sequence\x18\n \x01(\x0b\x32\x0c.DNASequence\x12\x1a\n\x08\x66\x65\x61tures\x18\x0b \x03(\x0b\x32\x08.Feature\x12\x11\n\taccession\x18\x0c \x01(\t\"A\n\x0f\x46\x65\x61tureLocation\x12\x17\n\x05start\x18\x02 \x01(\x03\x42\x08\xea\xf4\x18\x04*\x02\x08\x00\x12\x15\n\x03\x65nd\x18\x03 \x01(\x03\x42\x08\xea\xf4\x18\x04*\x02\x08\x01\"\xeb\x02\n\x07\x46\x65\x61ture\x12\x11\n\treference\x18\x01 \x01(\t\x12\x1c\n\x04type\x18\x02 \x01(\tB\x0e\xea\xf4\x18\n\x1a\x08^SO:\\d+$\x12\n\n\x02id\x18\x03 \x01(\t\x12+\n\tlocations\x18\x04 \x03(\x0b\x32\x10.FeatureLocationB\x06\xea\xf4\x18\x02H\x01\x12\x0c\n\x04name\x18\x05 \x01(\t\x12\x17\n\x06strand\x18\x07 \x01(\x0e\x32\x07.Strand\x12\x1f\n\x05phase\x18\x08 \x01(\x05\x42\x10\xea\xf4\x18\x04*\x02\x08\x01\xea\xf4\x18\x04\x32\x02\x08\x02\x12\x14\n\x05xrefs\x18\t \x03(\x0b\x32\x05.XRef\x12\x0e\n\x06parent\x18\n \x03(\t\x12,\n\nattributes\x18\x0f \x03(\x0b\x32\x18.Feature.AttributesEntry\x1a\x31\n\x0f\x41ttributesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01: \x9a\xf4\x18\x1c\x41 feature of a DNAComponent.R\x05score\"(\n\x04XRef\x12\x11\n\tnamespace\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\"\x1c\n\x0b\x44NASequence\x12\r\n\x05\x62\x61ses\x18\x01 \x01(\t\"7\n\x16GetDNAComponentRequest\x12\n\n\x02id\x18\x01 \x01(\t\x12\x11\n\taccession\x18\x02 \x01(\t\"\x1f\n\x11GetFeatureRequest\x12\n\n\x02id\x18\x01 \x01(\t\"D\n\x0fGetXrefsRequest\x12\n\n\x02id\x18\x01 \x01(\t\x12\x12\n\nfeature_id\x18\x02 \x01(\t\x12\x11\n\tnamespace\x18\x03 \x01(\t\"D\n\x1aSearchDNAComponentsRequest\x12\x12\n\nproject_id\x18\x01 \x01(\t\x12\x12\n\npage_token\x18\x04 \x01(\t\"Y\n\x1bSearchDNAComponentsResponse\x12!\n\ncomponents\x18\x01 \x03(\x0b\x32\r.DNAComponent\x12\x17\n\x0fnext_page_token\x18\x02 \x01(\t*$\n\x08Topology\x12\n\n\x06LINEAR\x10\x00\x12\x0c\n\x08\x43IRCULAR\x10\x01*4\n\x06Strand\x12\x10\n\x0cNONE_OR_BOTH\x10\x00\x12\x0b\n\x07\x46ORWARD\x10\x01\x12\x0b\n\x07REVERSE\x10\x02\x32\x93\x02\n\x0fSequenceLibrary\x12W\n\x12\x43reateDNAComponent\x12\r.DNAComponent\x1a\r.DNAComponent\"#\x82\xd3\xe4\x93\x02\x13\"\x0e/v1/components:\x01*\xba\xf5\x18\x06\n\x04\n\x02id\x12U\n\x0fGetDNAComponent\x12\x17.GetDNAComponentRequest\x1a\r.DNAComponent\"\x1a\x82\xd3\xe4\x93\x02\x14\x12\x12/v1/component/{id}\x12P\n\x13SearchDNAComponents\x12\x1b.SearchDNAComponentsRequest\x1a\x1c.SearchDNAComponentsResponseb\x06proto3')
  ,
  dependencies=[schema_dot_annotations__pb2.DESCRIPTOR,google_dot_api_dot_annotations__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_TOPOLOGY = _descriptor.EnumDescriptor(
  name='Topology',
  full_name='Topology',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='LINEAR', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CIRCULAR', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1070,
  serialized_end=1106,
)
_sym_db.RegisterEnumDescriptor(_TOPOLOGY)

Topology = enum_type_wrapper.EnumTypeWrapper(_TOPOLOGY)
_STRAND = _descriptor.EnumDescriptor(
  name='Strand',
  full_name='Strand',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NONE_OR_BOTH', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FORWARD', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REVERSE', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1108,
  serialized_end=1160,
)
_sym_db.RegisterEnumDescriptor(_STRAND)

Strand = enum_type_wrapper.EnumTypeWrapper(_STRAND)
LINEAR = 0
CIRCULAR = 1
NONE_OR_BOTH = 0
FORWARD = 1
REVERSE = 2



_DNACOMPONENT = _descriptor.Descriptor(
  name='DNAComponent',
  full_name='DNAComponent',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='DNAComponent.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='project_id', full_name='DNAComponent.project_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='topology', full_name='DNAComponent.topology', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sequence', full_name='DNAComponent.sequence', index=3,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='features', full_name='DNAComponent.features', index=4,
      number=11, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='accession', full_name='DNAComponent.accession', index=5,
      number=12, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=88,
  serialized_end=242,
)


_FEATURELOCATION = _descriptor.Descriptor(
  name='FeatureLocation',
  full_name='FeatureLocation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='start', full_name='FeatureLocation.start', index=0,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\352\364\030\004*\002\010\000'))),
    _descriptor.FieldDescriptor(
      name='end', full_name='FeatureLocation.end', index=1,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\352\364\030\004*\002\010\001'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=244,
  serialized_end=309,
)


_FEATURE_ATTRIBUTESENTRY = _descriptor.Descriptor(
  name='AttributesEntry',
  full_name='Feature.AttributesEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='Feature.AttributesEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='Feature.AttributesEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=585,
  serialized_end=634,
)

_FEATURE = _descriptor.Descriptor(
  name='Feature',
  full_name='Feature',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='reference', full_name='Feature.reference', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='type', full_name='Feature.type', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\352\364\030\n\032\010^SO:\\d+$'))),
    _descriptor.FieldDescriptor(
      name='id', full_name='Feature.id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='locations', full_name='Feature.locations', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\352\364\030\002H\001'))),
    _descriptor.FieldDescriptor(
      name='name', full_name='Feature.name', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='strand', full_name='Feature.strand', index=5,
      number=7, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='phase', full_name='Feature.phase', index=6,
      number=8, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\352\364\030\004*\002\010\001\352\364\030\0042\002\010\002'))),
    _descriptor.FieldDescriptor(
      name='xrefs', full_name='Feature.xrefs', index=7,
      number=9, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='parent', full_name='Feature.parent', index=8,
      number=10, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='attributes', full_name='Feature.attributes', index=9,
      number=15, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_FEATURE_ATTRIBUTESENTRY, ],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('\232\364\030\034A feature of a DNAComponent.')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=312,
  serialized_end=675,
)


_XREF = _descriptor.Descriptor(
  name='XRef',
  full_name='XRef',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='namespace', full_name='XRef.namespace', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='XRef.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=677,
  serialized_end=717,
)


_DNASEQUENCE = _descriptor.Descriptor(
  name='DNASequence',
  full_name='DNASequence',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='bases', full_name='DNASequence.bases', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=719,
  serialized_end=747,
)


_GETDNACOMPONENTREQUEST = _descriptor.Descriptor(
  name='GetDNAComponentRequest',
  full_name='GetDNAComponentRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='GetDNAComponentRequest.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='accession', full_name='GetDNAComponentRequest.accession', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=749,
  serialized_end=804,
)


_GETFEATUREREQUEST = _descriptor.Descriptor(
  name='GetFeatureRequest',
  full_name='GetFeatureRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='GetFeatureRequest.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=806,
  serialized_end=837,
)


_GETXREFSREQUEST = _descriptor.Descriptor(
  name='GetXrefsRequest',
  full_name='GetXrefsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='GetXrefsRequest.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='feature_id', full_name='GetXrefsRequest.feature_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='namespace', full_name='GetXrefsRequest.namespace', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=839,
  serialized_end=907,
)


_SEARCHDNACOMPONENTSREQUEST = _descriptor.Descriptor(
  name='SearchDNAComponentsRequest',
  full_name='SearchDNAComponentsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project_id', full_name='SearchDNAComponentsRequest.project_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='page_token', full_name='SearchDNAComponentsRequest.page_token', index=1,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=909,
  serialized_end=977,
)


_SEARCHDNACOMPONENTSRESPONSE = _descriptor.Descriptor(
  name='SearchDNAComponentsResponse',
  full_name='SearchDNAComponentsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='components', full_name='SearchDNAComponentsResponse.components', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='next_page_token', full_name='SearchDNAComponentsResponse.next_page_token', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=979,
  serialized_end=1068,
)

_DNACOMPONENT.fields_by_name['topology'].enum_type = _TOPOLOGY
_DNACOMPONENT.fields_by_name['sequence'].message_type = _DNASEQUENCE
_DNACOMPONENT.fields_by_name['features'].message_type = _FEATURE
_FEATURE_ATTRIBUTESENTRY.containing_type = _FEATURE
_FEATURE.fields_by_name['locations'].message_type = _FEATURELOCATION
_FEATURE.fields_by_name['strand'].enum_type = _STRAND
_FEATURE.fields_by_name['xrefs'].message_type = _XREF
_FEATURE.fields_by_name['attributes'].message_type = _FEATURE_ATTRIBUTESENTRY
_SEARCHDNACOMPONENTSRESPONSE.fields_by_name['components'].message_type = _DNACOMPONENT
DESCRIPTOR.message_types_by_name['DNAComponent'] = _DNACOMPONENT
DESCRIPTOR.message_types_by_name['FeatureLocation'] = _FEATURELOCATION
DESCRIPTOR.message_types_by_name['Feature'] = _FEATURE
DESCRIPTOR.message_types_by_name['XRef'] = _XREF
DESCRIPTOR.message_types_by_name['DNASequence'] = _DNASEQUENCE
DESCRIPTOR.message_types_by_name['GetDNAComponentRequest'] = _GETDNACOMPONENTREQUEST
DESCRIPTOR.message_types_by_name['GetFeatureRequest'] = _GETFEATUREREQUEST
DESCRIPTOR.message_types_by_name['GetXrefsRequest'] = _GETXREFSREQUEST
DESCRIPTOR.message_types_by_name['SearchDNAComponentsRequest'] = _SEARCHDNACOMPONENTSREQUEST
DESCRIPTOR.message_types_by_name['SearchDNAComponentsResponse'] = _SEARCHDNACOMPONENTSRESPONSE
DESCRIPTOR.enum_types_by_name['Topology'] = _TOPOLOGY
DESCRIPTOR.enum_types_by_name['Strand'] = _STRAND

DNAComponent = _reflection.GeneratedProtocolMessageType('DNAComponent', (_message.Message,), dict(
  DESCRIPTOR = _DNACOMPONENT,
  __module__ = 'genomics.v1.sequences_pb2'
  # @@protoc_insertion_point(class_scope:DNAComponent)
  ))
_sym_db.RegisterMessage(DNAComponent)

FeatureLocation = _reflection.GeneratedProtocolMessageType('FeatureLocation', (_message.Message,), dict(
  DESCRIPTOR = _FEATURELOCATION,
  __module__ = 'genomics.v1.sequences_pb2'
  # @@protoc_insertion_point(class_scope:FeatureLocation)
  ))
_sym_db.RegisterMessage(FeatureLocation)

Feature = _reflection.GeneratedProtocolMessageType('Feature', (_message.Message,), dict(

  AttributesEntry = _reflection.GeneratedProtocolMessageType('AttributesEntry', (_message.Message,), dict(
    DESCRIPTOR = _FEATURE_ATTRIBUTESENTRY,
    __module__ = 'genomics.v1.sequences_pb2'
    # @@protoc_insertion_point(class_scope:Feature.AttributesEntry)
    ))
  ,
  DESCRIPTOR = _FEATURE,
  __module__ = 'genomics.v1.sequences_pb2'
  # @@protoc_insertion_point(class_scope:Feature)
  ))
_sym_db.RegisterMessage(Feature)
_sym_db.RegisterMessage(Feature.AttributesEntry)

XRef = _reflection.GeneratedProtocolMessageType('XRef', (_message.Message,), dict(
  DESCRIPTOR = _XREF,
  __module__ = 'genomics.v1.sequences_pb2'
  # @@protoc_insertion_point(class_scope:XRef)
  ))
_sym_db.RegisterMessage(XRef)

DNASequence = _reflection.GeneratedProtocolMessageType('DNASequence', (_message.Message,), dict(
  DESCRIPTOR = _DNASEQUENCE,
  __module__ = 'genomics.v1.sequences_pb2'
  # @@protoc_insertion_point(class_scope:DNASequence)
  ))
_sym_db.RegisterMessage(DNASequence)

GetDNAComponentRequest = _reflection.GeneratedProtocolMessageType('GetDNAComponentRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETDNACOMPONENTREQUEST,
  __module__ = 'genomics.v1.sequences_pb2'
  # @@protoc_insertion_point(class_scope:GetDNAComponentRequest)
  ))
_sym_db.RegisterMessage(GetDNAComponentRequest)

GetFeatureRequest = _reflection.GeneratedProtocolMessageType('GetFeatureRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETFEATUREREQUEST,
  __module__ = 'genomics.v1.sequences_pb2'
  # @@protoc_insertion_point(class_scope:GetFeatureRequest)
  ))
_sym_db.RegisterMessage(GetFeatureRequest)

GetXrefsRequest = _reflection.GeneratedProtocolMessageType('GetXrefsRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETXREFSREQUEST,
  __module__ = 'genomics.v1.sequences_pb2'
  # @@protoc_insertion_point(class_scope:GetXrefsRequest)
  ))
_sym_db.RegisterMessage(GetXrefsRequest)

SearchDNAComponentsRequest = _reflection.GeneratedProtocolMessageType('SearchDNAComponentsRequest', (_message.Message,), dict(
  DESCRIPTOR = _SEARCHDNACOMPONENTSREQUEST,
  __module__ = 'genomics.v1.sequences_pb2'
  # @@protoc_insertion_point(class_scope:SearchDNAComponentsRequest)
  ))
_sym_db.RegisterMessage(SearchDNAComponentsRequest)

SearchDNAComponentsResponse = _reflection.GeneratedProtocolMessageType('SearchDNAComponentsResponse', (_message.Message,), dict(
  DESCRIPTOR = _SEARCHDNACOMPONENTSRESPONSE,
  __module__ = 'genomics.v1.sequences_pb2'
  # @@protoc_insertion_point(class_scope:SearchDNAComponentsResponse)
  ))
_sym_db.RegisterMessage(SearchDNAComponentsResponse)


_FEATURELOCATION.fields_by_name['start'].has_options = True
_FEATURELOCATION.fields_by_name['start']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\352\364\030\004*\002\010\000'))
_FEATURELOCATION.fields_by_name['end'].has_options = True
_FEATURELOCATION.fields_by_name['end']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\352\364\030\004*\002\010\001'))
_FEATURE_ATTRIBUTESENTRY.has_options = True
_FEATURE_ATTRIBUTESENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_FEATURE.fields_by_name['type'].has_options = True
_FEATURE.fields_by_name['type']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\352\364\030\n\032\010^SO:\\d+$'))
_FEATURE.fields_by_name['locations'].has_options = True
_FEATURE.fields_by_name['locations']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\352\364\030\002H\001'))
_FEATURE.fields_by_name['phase'].has_options = True
_FEATURE.fields_by_name['phase']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\352\364\030\004*\002\010\001\352\364\030\0042\002\010\002'))
_FEATURE.has_options = True
_FEATURE._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('\232\364\030\034A feature of a DNAComponent.'))
import grpc
from grpc.beta import implementations as beta_implementations
from grpc.beta import interfaces as beta_interfaces
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities


class SequenceLibraryStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CreateDNAComponent = channel.unary_unary(
        '/SequenceLibrary/CreateDNAComponent',
        request_serializer=DNAComponent.SerializeToString,
        response_deserializer=DNAComponent.FromString,
        )
    self.GetDNAComponent = channel.unary_unary(
        '/SequenceLibrary/GetDNAComponent',
        request_serializer=GetDNAComponentRequest.SerializeToString,
        response_deserializer=DNAComponent.FromString,
        )
    self.SearchDNAComponents = channel.unary_unary(
        '/SequenceLibrary/SearchDNAComponents',
        request_serializer=SearchDNAComponentsRequest.SerializeToString,
        response_deserializer=SearchDNAComponentsResponse.FromString,
        )


class SequenceLibraryServicer(object):

  def CreateDNAComponent(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetDNAComponent(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SearchDNAComponents(self, request, context):
    """NOTE(lays): just an example.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SequenceLibraryServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CreateDNAComponent': grpc.unary_unary_rpc_method_handler(
          servicer.CreateDNAComponent,
          request_deserializer=DNAComponent.FromString,
          response_serializer=DNAComponent.SerializeToString,
      ),
      'GetDNAComponent': grpc.unary_unary_rpc_method_handler(
          servicer.GetDNAComponent,
          request_deserializer=GetDNAComponentRequest.FromString,
          response_serializer=DNAComponent.SerializeToString,
      ),
      'SearchDNAComponents': grpc.unary_unary_rpc_method_handler(
          servicer.SearchDNAComponents,
          request_deserializer=SearchDNAComponentsRequest.FromString,
          response_serializer=SearchDNAComponentsResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'SequenceLibrary', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BetaSequenceLibraryServicer(object):
  def CreateDNAComponent(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def GetDNAComponent(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def SearchDNAComponents(self, request, context):
    """NOTE(lays): just an example.
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


class BetaSequenceLibraryStub(object):
  def CreateDNAComponent(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  CreateDNAComponent.future = None
  def GetDNAComponent(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  GetDNAComponent.future = None
  def SearchDNAComponents(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """NOTE(lays): just an example.
    """
    raise NotImplementedError()
  SearchDNAComponents.future = None


def beta_create_SequenceLibrary_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  request_deserializers = {
    ('SequenceLibrary', 'CreateDNAComponent'): DNAComponent.FromString,
    ('SequenceLibrary', 'GetDNAComponent'): GetDNAComponentRequest.FromString,
    ('SequenceLibrary', 'SearchDNAComponents'): SearchDNAComponentsRequest.FromString,
  }
  response_serializers = {
    ('SequenceLibrary', 'CreateDNAComponent'): DNAComponent.SerializeToString,
    ('SequenceLibrary', 'GetDNAComponent'): DNAComponent.SerializeToString,
    ('SequenceLibrary', 'SearchDNAComponents'): SearchDNAComponentsResponse.SerializeToString,
  }
  method_implementations = {
    ('SequenceLibrary', 'CreateDNAComponent'): face_utilities.unary_unary_inline(servicer.CreateDNAComponent),
    ('SequenceLibrary', 'GetDNAComponent'): face_utilities.unary_unary_inline(servicer.GetDNAComponent),
    ('SequenceLibrary', 'SearchDNAComponents'): face_utilities.unary_unary_inline(servicer.SearchDNAComponents),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)


def beta_create_SequenceLibrary_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  request_serializers = {
    ('SequenceLibrary', 'CreateDNAComponent'): DNAComponent.SerializeToString,
    ('SequenceLibrary', 'GetDNAComponent'): GetDNAComponentRequest.SerializeToString,
    ('SequenceLibrary', 'SearchDNAComponents'): SearchDNAComponentsRequest.SerializeToString,
  }
  response_deserializers = {
    ('SequenceLibrary', 'CreateDNAComponent'): DNAComponent.FromString,
    ('SequenceLibrary', 'GetDNAComponent'): DNAComponent.FromString,
    ('SequenceLibrary', 'SearchDNAComponents'): SearchDNAComponentsResponse.FromString,
  }
  cardinalities = {
    'CreateDNAComponent': cardinality.Cardinality.UNARY_UNARY,
    'GetDNAComponent': cardinality.Cardinality.UNARY_UNARY,
    'SearchDNAComponents': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'SequenceLibrary', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
